#importing libraries

import tensorflow as tf
import numpy as np
import web
import os

import add_face
import facenet

#initialize tensorflow grpah
graph = tf.Graph()
sess = tf.Session()    

with graph.as_default():
      
        #start a tensorflow session
        with sess.as_default():
		
		#declare variables
		model="model-110547/model.pb"
		class_names=np.load('classnames.npy')
		embeds=np.load('embed.npy')
		labels=np.load('labels.npy')
		image_dir='images/'

		render = web.template.render('./html_template_web/')
		urls = ('/', 'index')
            	
                # Load the model
                print('Loading feature extraction model')
            	facenet.load_model(model)
   		
		#define index class
		class index:
			def GET(self): 
				#display index.html template				
				return render.index()

    			def POST(self):
				#save user inputs
        			face_name = web.input()
        			files = web.webapi.rawinput().get('new_face_files')
        			face_name = face_name.new_face_name
				
				#save images in a list		
        			if not isinstance(files, list):
        		    		files = [files]

				#save faces to images directory
        			os.mkdir(image_dir+face_name)
        			for f in files:
        		    		target = 'images/'+face_name
        		    		content = f.file.read()
        		    		with open(target +'/'+ f.filename,'w') as f:
        		        		f.write(content)
            	
    				#add face to database/numpy
				global class_names 
				global labels
				global embeds
				updates=add_face.main(sess, graph, image_dir, class_names, labels, embeds)
 				class_names=updates[0]
				labels=updates[1]
				embeds=updates[2]       			

 				raise web.seeother('/')
	

if __name__ == "__main__":

  	app = web.application(urls, globals())
  	app.run()

